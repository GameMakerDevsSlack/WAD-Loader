<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_font(font0);

enum types {
    UltimateDOOM,
    DOOM2
}

var fname = "freedoom1.WAD";
wad = file_bin_open(fname, 0);

header = "";
repeat (4)
{
    header += chr(file_bin_read_byte(wad));
}  
numlumps = file_bin_read_word(wad,4,false);    //DOOM ints are Little Endian
infoOffset = file_bin_read_word(wad,4,false);
var size = file_bin_size(wad);
file_bin_seek(wad,infoOffset);

lumps = ds_list_create();

for (var i=0;i&lt;numlumps;i++)
{
    lumps[| i*3]   = file_bin_read_word(wad,4,false);       //filepos
    lumps[| i*3+1] = file_bin_read_word(wad,4,false);       //size
    lumps[| i*3+2] = "";
    repeat (8)
    {
        lumps[| i*3+2] += chr(file_bin_read_byte(wad));     //name
    }
}
show_message(ds_list_size(lumps));
mapType = types.UltimateDOOM;               //ExMy format used in UltDOOM  WADs
if ds_list_find_index(lumps,"MAP01")        //MAPxx format used in DOOM 2  WADs
{
    mapType = types.DOOM2;
}
copy_list_text(lumps);
//read palettes
//Palettes - 16x16 - 256 colours each
var pos = lumps[| ds_list_find_index(lumps,"PLAYPAL")-2];
numPalettes = ( lumps[| ds_list_find_index(lumps,"PLAYPAL")-1]/(768) );
file_bin_seek(wad,pos);
paletteColour[numPalettes-1,255] = 0;
palettes[numPalettes] = 0;
for (var i=0;i&lt;numPalettes;i++)
{
    palettes[i] = surface_create(16,16);
    surface_set_target(palettes[i]);
    for (var j=0;j&lt;256;j++)     //256 colours in a palette
    {
        var r = file_bin_read_byte(wad),
            g = file_bin_read_byte(wad),
            b = file_bin_read_byte(wad),
            c = make_color_rgb(r,g,b),
            xx= floor(j/16),
            yy= j mod 16;
            
            paletteColour[i,j] = c;
            draw_set_color(c);
            draw_point(xx,yy);
    }
    surface_reset_target();
    paletteBuffer[i] = buffer_create(1024,buffer_grow,1);
    buffer_get_surface(paletteBuffer[i],palettes[i],0,0,0);
    show_debug_message("Palette " + string(i) + " completed");
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//draw_list(4,16,lumps,-1,1016);
for (var i=0;i&lt;7;i++)
{
    for (var j=0;j&lt;2;j++)
    {
        if !surface_exists(palettes[i*2+j])
        {
            palettes[i*2+j] = surface_create(16,16);
            buffer_set_surface(paletteBuffer[i*2 + j],palettes[i*2+j],0,0,0);
        }
        draw_surface_ext(palettes[i*2+j],i*64,j*64,4,4,0,c_white,1);
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
